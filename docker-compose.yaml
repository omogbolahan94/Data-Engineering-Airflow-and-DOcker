version: '3'

services:
  source_postgres:
    image: postgres:15
    ports:
      - "5433:5432"
    networks:
      - elt_network
    environment:
      POSTGRES_DB:  source_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    volumes: 
      - ./source_db_init/init.sql:/docker-entrypoint-initdb.d/init.sql 
  
  destination_postgres: 
    image: postgres:15
    ports:
      - "5434:5432"
    networks:
      - elt_network
    environment:
      POSTGRES_DB: destination_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret

  # utilise the script we are running to send data from src to dst
  elt_script:
    build:
      context: ./elt # script directory
      dockerfile: Dockerfile
    command: ["python", "elt_script.py"] 
    networks:
      - elt_network  
    depends_on: # docker will not run ELT python scripts until the two depenencies (source and destination DB) are finished initialising
      - source_postgres
      - destination_postgres

  dbt:
    image: ghcr.io/dbt-labs/dbt-postgres:1.4.7
    command: [
      "run",
      "--profiles-dir",
      "/root",
      "--project-dir",
      "/dbt"
    ]
    networks:
      - elt_network
    volumes:
      - /custom_postgres:/dbt
      - ~/.dbt:/root
    depends_on:
      - elt_script
    environment:
      DBT_PROFILE: default
      DBT_TARGET: dev

  postgres: 
      image: postgres:15
      networks:
        - elt_network
      environment:
        POSTGRES_DB: airflow_db
        POSTGRES_USER: airflow
        POSTGRES_PASSWORD: airflow

  init_airflow:
      image: apache/airflow:latest
      networks:
        - elt_network
      depends_on:
        - postgres
      environment:
        AIRFLOW__DATABSE__SQL_ALCHEMY_CONN=postgres+psycopg2://airflow:airflow@postges/airflow
      command: >
        bash -c "airflow db init &&
                  airflow users create --username airflow --password password 
                  --firstname Gabriel --lastname Olatunji --role Admin 
                  --email olatunji@sample.com"

  webserve:
    image:
    
networks:
  elt_network:
    driver: bridge